name: iOS 越狱应用构建流水线

on:
  workflow_dispatch: # 手动触发
  push:
    branches: [main, master] # 主分支推送时触发
    tags: [v*] # 版本标签推送时触发

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: macos-latest
    timeout-minutes: 30
    
    env:
      APP_NAME: "Yoedu"  # 修改为你的应用名称
      THEOS_VERSION: "v2.6"         # THEOS 版本
      IOS_SDK: "iPhoneOS16.3"       # iOS SDK 版本
      OUTPUT_DIR: "Build"           # 构建输出目录

    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: 设置基础环境
        run: |
          # 创建必要目录
          mkdir -p ${{ env.OUTPUT_DIR }}
          echo "PROJECT_ROOT=$(pwd)" >> $GITHUB_ENV
          echo "THEOS_DIR=$(pwd)/theos" >> $GITHUB_ENV
          
          # 获取版本信息
          if [ -f "VERSION" ]; then
            APP_VERSION=$(cat VERSION)
          else
            APP_VERSION=$(git describe --tags --abbrev=0 || echo "1.0.0")
          fi
          
          BUILD_DATE=$(date +'%Y%m%d-%H%M%S')
          GIT_HASH=$(git rev-parse --short HEAD)
          
          echo "APP_VERSION=${APP_VERSION}" >> $GITHUB_ENV
          echo "BUILD_DATE=${BUILD_DATE}" >> $GITHUB_ENV
          echo "GIT_HASH=${GIT_HASH}" >> $GITHUB_ENV

      - name: 安装基础依赖
        run: |
          # 安装 Homebrew 依赖
          brew install coreutils findutils gnu-sed ldid libarchive pkg-config
          
          # 安装 Xcode 命令行工具
          sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer

      - name: 安装 THEOS
        run: |
          export THEOS="${{ env.THEOS_DIR }}"
          mkdir -p $THEOS
          
          # 下载指定版本的 THEOS
          git clone --branch ${{ env.THEOS_VERSION }} https://github.com/theos/theos.git $THEOS
          
          # 设置环境变量
          echo "THEOS=$THEOS" >> $GITHUB_ENV
          echo "PATH=$THEOS/bin:$PATH" >> $GITHUB_ENV

      - name: 安装 iOS SDK
        run: |
          export THEOS="${{ env.THEOS_DIR }}"
          mkdir -p $THEOS/sdks
          
          # 下载 iOS SDK
          SDK_URL="https://github.com/theos/sdks/releases/latest/download/${{ env.IOS_SDK }}.sdk.tar.xz"
          curl -L $SDK_URL --output $THEOS/sdks/sdk.tar.xz
          
          # 解压 SDK
          tar -xf $THEOS/sdks/sdk.tar.xz -C $THEOS/sdks
          rm $THEOS/sdks/sdk.tar.xz
          
          # 验证 SDK
          if [ ! -d "$THEOS/sdks/${{ env.IOS_SDK }}.sdk" ]; then
            mv $THEOS/sdks/*.sdk $THEOS/sdks/${{ env.IOS_SDK }}.sdk
          fi

      - name: 安装项目依赖
        run: |
          # 安装 THEOS 依赖
          ${{ env.THEOS_DIR }}/bin/update-theos
          
          # 安装项目特定依赖 (如果有)
          if [ -f "Makefile" ]; then
            make setup
          fi
          
          if [ -f "requirements.txt" ]; then
            pip3 install -r requirements.txt
          fi

      - name: 执行构建
        run: |
          # 标准构建命令
          make clean
          
          # 使用 rootless 模式 (现代越狱标准)
          make package \
            THEOS_PACKAGE_SCHEME=rootless \
            ARCHS=arm64 \
            TARGET=iphone:clang:latest:13.0 \
            DEBUG=0 \
            FINALPACKAGE=1
            
          # 移动构建产物
          mkdir -p ${{ env.OUTPUT_DIR }}
          mv packages/*.tipa ${{ env.OUTPUT_DIR }}/

      - name: 重命名输出文件
        run: |
          OUTPUT_FILE="${{ env.OUTPUT_DIR }}/${{ env.APP_NAME }}-v${{ env.APP_VERSION }}.tipa"
          mv ${{ env.OUTPUT_DIR }}/*.tipa "$OUTPUT_FILE"
          echo "OUTPUT_FILE=$OUTPUT_FILE" >> $GITHUB_ENV

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-${{ env.APP_VERSION }}
          path: ${{ env.OUTPUT_FILE }}

      - name: 创建 GitHub Release
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.OUTPUT_FILE }}
          tag_name: ${{ github.ref }}
          name: ${{ env.APP_NAME }} v${{ env.APP_VERSION }}
          body: |
            **构建信息**  
            版本: ${{ env.APP_VERSION }}  
            提交: [${{ env.GIT_HASH }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})  
            日期: ${{ env.BUILD_DATE }}  
            构建日志: [查看详情](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
