name: "Build TIPA File"

on:
  schedule:
    - cron: '0 */2 * * *'  # 每2小时运行一次
  workflow_dispatch:       # 支持手动触发

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: macos-13
    
    steps:
      - name: Checkout Code
        run: |
          set -x
          git clone --recursive https://github.com/roothide/Dopamine2-roothide ${{ github.workspace }}
          cd ${{ github.workspace }}

      - name: Setup Build Environment
        run: |
          set -x
          # 安装基本依赖
          brew install libarchive make ldid findutils gnu-sed coreutils
          
          # 设置环境变量
          export BASEDIR="$(pwd)"
          export THEOS="${BASEDIR}/theos"
          export PATH="/opt/procursus/bin:/opt/procursus/sbin:/opt/procursus/games:$PATH"
          
          # 记录构建信息
          echo "BUILD_TIME=$(TZ=UTC-2 date +'%Y%m%d_%H%M%S')" >> $GITHUB_ENV
          echo "GIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Install THEOS
        run: |
          set -x
          mkdir -p $THEOS
          
          # 安装 THEOS
          curl -fsSL https://raw.githubusercontent.com/roothide/theos/master/bin/install-theos -o install-theos.sh
          chmod +x install-theos.sh
          ./install-theos.sh
          
          # 下载 iOS SDK
          curl -L https://github.com/theos/sdks/releases/latest/download/iPhoneOS16.5.sdk.tar.xz -o sdk.tar.xz
          tar -xf sdk.tar.xz -C $THEOS/sdks/
          rm sdk.tar.xz

      - name: Build Trustcache
        run: |
          set -x
          git clone https://github.com/CRKatri/trustcache
          cd trustcache
          make -j$(sysctl -n hw.physicalcpu) OPENSSL=1
          mkdir -p /opt/procursus/bin
          sudo cp trustcache /opt/procursus/bin/
          cd ..

      - name: Build Application
        run: |
          set -x
          # 禁用签名检查
          export CODESIGN_ALLOCATE=$(which codesign_allocate)
          export CODESIGN_INSTALL_PATH="/usr/bin/true"
          
          # 构建应用
          make -j$(sysctl -n hw.physicalcpu) DEBUG=0 STRAP=0
          
          # 获取版本信息
          TAG=$(git describe --tags --abbrev=0)
          echo "APP_VERSION=$TAG" >> $GITHUB_ENV
          
          # 重命名输出文件
          mv ./Application/Dopamine.tipa "./Application/roothide-Dopamine2-$TAG-${{ env.GIT_HASH }}.tipa"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Dopamine-TIPA-${{ env.APP_VERSION }}
          path: ${{ github.workspace }}/Application/*.tipa
          retention-days: 7
