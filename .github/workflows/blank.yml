name: "iOS 越狱应用构建工作流"

on:
  schedule:
    - cron: '0 */2 * * *' # 每 2 小时自动构建
  workflow_dispatch: # 支持手动触发
  push: # 代码推送时触发
    branches:
      - main
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: macos-latest # 使用最新 macOS 版本
    
    env:
      PROJECT_NAME: "yuedu" # 替换为实际应用名称
      REPO_URL: "https://github.com/yaoshuaya/Yuedu" # 替换为实际仓库地址
      OUTPUT_DIR: "BuildOutput" # 构建产物输出目录

    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: 设置基础环境
        run: |
          # 创建必要目录
          mkdir -p ${{ env.OUTPUT_DIR }}
          echo "PROJECT_ROOT=$(pwd)" >> $GITHUB_ENV

      - name: 安装 Procursus 工具链
        uses: dhinakg/procursus-action@main
        with:
          packages: ldid findutils sed coreutils make git

      - name: 安装 THEOS 框架
        run: |
          export THEOS="${{ env.PROJECT_ROOT }}/theos"
          mkdir -p $THEOS
          
          # 下载安装脚本
          curl -fsSL https://raw.githubusercontent.com/theos/theos/master/bin/install-theos > install-theos.sh
          chmod +x install-theos.sh
          
          # 执行安装
          ./install-theos.sh
          
          # 安装 iOS SDK (示例版本)
          SDK_VERSION="iPhoneOS16.5"
          SDK_URL="https://github.com/theos/sdks/releases/latest/download/${SDK_VERSION}.sdk.tar.xz"
          curl -L $SDK_URL --output $THEOS/sdks/$SDK_VERSION.sdk.tar.xz
          tar -xf $THEOS/sdks/$SDK_VERSION.sdk.tar.xz -C $THEOS/sdks
          rm $THEOS/sdks/$SDK_VERSION.sdk.tar.xz

      - name: 安装构建依赖
        run: |
          # 安装 Homebrew 依赖
          brew install libarchive pkg-config
          
          # 安装 Python 依赖 (示例)
          pip3 install -r requirements.txt

      - name: 设置构建信息
        run: |
          # 获取版本信息
          APP_VERSION=$(cat VERSION || echo "1.0.0")
          GIT_HASH=$(git rev-parse --short HEAD)
          BUILD_DATE=$(date +'%Y%m%d-%H%M%S')
          
          echo "APP_VERSION=${APP_VERSION}" >> $GITHUB_ENV
          echo "BUILD_DATE=${BUILD_DATE}" >> $GITHUB_ENV
          echo "GIT_HASH=${GIT_HASH}" >> $GITHUB_ENV

      - name: 执行构建
        run: |
          # 通用构建命令 - 根据实际项目修改
          make clean
          make package \
            THEOS_PACKAGE_SCHEME=rootless \
            ARCHS=arm64 \
            TARGET=iphone:clang:latest:13.0 \
            DEBUG=0

          # 移动构建产物到输出目录
          mv "packages/*.tipa" ${{ env.OUTPUT_DIR }}/

      - name: 重命名输出文件
        run: |
          OUTPUT_FILE="${{ env.OUTPUT_DIR }}/${{ env.PROJECT_NAME }}-v${{ env.APP_VERSION }}-${{ env.BUILD_DATE }}.tipa"
          mv ${{ env.OUTPUT_DIR }}/*.tipa "$OUTPUT_FILE"
          echo "OUTPUT_FILE=$OUTPUT_FILE" >> $GITHUB_ENV

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT_NAME }}-build-${{ env.BUILD_DATE }}
          path: ${{ env.OUTPUT_FILE }}

      - name: 发布到 GitHub Releases
        if: ${{ success() && github.event_name == 'push' }}
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.OUTPUT_FILE }}
          tag_name: v${{ env.APP_VERSION }}
          body: | 
            ${{ env.PROJECT_NAME }} 自动构建版本
            - 版本: ${{ env.APP_VERSION }}
            - 提交: ${{ env.GIT_HASH }}
            - 日期: ${{ env.BUILD_DATE }}
